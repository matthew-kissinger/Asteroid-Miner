var _=Object.defineProperty;var Y=(d,e,i)=>e in d?_(d,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):d[e]=i;var D=(d,e,i)=>Y(d,typeof e!="symbol"?e+"":e,i);import{G as O,B as E,r as v,K as y,M as p,t as x,n as T,q as w,S as C,A as P,v as R,a as B,L as j,s as k,a9 as Q,u as W,b as f,c as z,aU as X}from"./three-DEtojxaq.js";import{g as K,A as Z,c as J,P as ee,d as te,e as ie,f as se,h as oe}from"./game-modules-DrL_oOTa.js";import{a as ae}from"./combat-Bzyirpe1.js";import{M as ne}from"./core-AGMxUAyq.js";import"./ui-modules-C3FA310U.js";import"./components-oXlWjsfY.js";import"./physics-rendering-Bkwvzh1H.js";class re{constructor(e){this.scene=e,this.ship=null,this.engineGlows=[],this.teleportBeam=null,this.teleportBeamParticles=null,this.teleportBeamActive=!1,this.createShipModel(),this.scene.add(this.ship),console.log("Star Dreadnought created")}createShipModel(){this.ship=new O,this.ship.name="starDreadnought";const e=1200;this.createMainHull(e),this.createCommandBridge(e),this.createEngineArray(e),this.createSurfaceDetails(e),this.createTeleportBeam(e)}createMainHull(e){const i=e,t=e*.22,s=e*.06,o=.15,l=new E,r=new Float32Array([-t/2,-s/2,i/2,t/2,-s/2,i/2,-t*o,-s/2,-i/2,t/2,-s/2,i/2,t*o,-s/2,-i/2,-t*o,-s/2,-i/2,-t/2,s/2,i/2,-t*o,s/2,-i/2,t/2,s/2,i/2,t/2,s/2,i/2,-t*o,s/2,-i/2,t*o,s/2,-i/2,-t/2,-s/2,i/2,-t/2,s/2,i/2,-t*o,-s/2,-i/2,-t/2,s/2,i/2,-t*o,s/2,-i/2,-t*o,-s/2,-i/2,t/2,-s/2,i/2,t*o,-s/2,-i/2,t/2,s/2,i/2,t/2,s/2,i/2,t*o,-s/2,-i/2,t*o,s/2,-i/2,-t/2,-s/2,i/2,-t/2,s/2,i/2,t/2,-s/2,i/2,t/2,-s/2,i/2,-t/2,s/2,i/2,t/2,s/2,i/2,-t*o,-s/2,-i/2,-t*o,s/2,-i/2,t*o,-s/2,-i/2,t*o,-s/2,-i/2,-t*o,s/2,-i/2,t*o,s/2,-i/2]);new Float32Array(r.length),l.setAttribute("position",new v(r,3));const n=new y({color:3355460,metalness:.8,roughness:.3,emissive:1118481,emissiveIntensity:.2}),a=new p(l,n);a.geometry.computeVertexNormals(),a.castShadow=!0,a.receiveShadow=!0,this.ship.add(a),this.addHullPlates(e,a)}addHullPlates(e,i){const t=e*.2,s=e*.18,o=e*.01,l=e*.035;for(let r=0;r<5;r++){const n=e*.4-r*t,a=new x(s,o,t),h=new y({color:4473941,metalness:.7,roughness:.4,emissive:2236962}),c=new p(a,h);c.position.set(0,l,n),c.castShadow=!0,c.receiveShadow=!0,this.ship.add(c)}}createCommandBridge(e){const i=e*.12,t=e*.06,s=e*.08,o=e*.085,l=e*.28,r=new y({color:5592422,metalness:.7,roughness:.3,emissive:2236962,emissiveIntensity:.2}),n=new x(t,i,s),a=new p(n,r);a.position.set(0,o,l),a.castShadow=!0,a.receiveShadow=!0,this.ship.add(a),this.addBridgeWindows(e,a,o);const h=.7,c=new x(t*h,i*h,s*h),m=new p(c,r);m.position.set(-t*1.2,o,l+s*.6),m.castShadow=!0,m.receiveShadow=!0,this.ship.add(m);const u=new p(c,r);u.position.set(t*1.2,o,l+s*.6),u.castShadow=!0,u.receiveShadow=!0,this.ship.add(u)}addBridgeWindows(e,i,t){const s=e*.003,o=e*.006,l=6,r=10,n=t-e*.02,a=e*.001,h=new y({color:11189196,emissive:11189196,emissiveIntensity:1,transparent:!0,opacity:.9});for(let c=0;c<l;c++)for(let m=0;m<r;m++){if(Math.random()>.85)continue;const u=new x(s,s,a),g=new p(u,h);g.position.set((m-r/2)*o,n+c*o,i.position.z+e*.04+a),this.ship.add(g)}}createEngineArray(e){const i=e*.018,t=e*.04,s=e*.48,o=e*.01,l=e*.2,r=e*.05,n=e*.06,a=new x(l,r,n),h=new y({color:3355460,metalness:.8,roughness:.4}),c=new p(a,h);c.position.set(0,o,s),c.castShadow=!0,c.receiveShadow=!0,this.ship.add(c);const m=new y({color:3368703,emissive:3368703,emissiveIntensity:.7,transparent:!0,opacity:.7}),u=new y({color:3368703,emissive:3368703,emissiveIntensity:1.5,transparent:!0,opacity:.8}),g=2,b=5,S=r*.5;for(let M=0;M<g;M++){const I=o-S*(M-.5);for(let F=0;F<b;F++){const L=(F-(b-1)/2)*(l/(b-1)*.8),N=new T(i,i*1.5,t,16),G=new p(N,m);G.position.set(L,I,s+n*.5),G.rotation.x=Math.PI/2,this.ship.add(G);const V=new w(i*1.6,16,16),A=new p(V,u.clone());A.position.set(L,I,s+n*.5+t*1.1),this.ship.add(A),this.engineGlows.push(A);const $=new w(i*2.5,16,16),U=u.clone();U.opacity=.4;const q=new p($,U);q.position.copy(A.position),this.ship.add(q),this.engineGlows.push(q)}}this.createEngineTrailParticles(e,s,l)}createSurfaceDetails(e){this.createTurrets(e),this.createSurfaceTrenches(e),this.createShieldGenerators(e)}createTurrets(e){const i=e*.008,t=e*.01,s=e*.01,o=e*.005,l=new y({color:6710903,metalness:.7,roughness:.3}),r=[];for(let a=0;a<12;a++){const h=e*.2-a*e*.07;r.push([-e*.1,e*.035,h])}r.forEach(a=>{const h=new T(s,s,o,8),c=new p(h,l);c.position.set(a[0],a[1],a[2]),this.ship.add(c);const m=new T(i,i,t,8),u=new p(m,l);u.position.set(a[0],a[1]+o*.5+t*.5,a[2]),u.rotation.x=Math.PI/2,u.rotation.z=-Math.PI/6,this.ship.add(u)});const n=[];for(let a=0;a<12;a++){const h=e*.2-a*e*.07;n.push([e*.1,e*.035,h])}n.forEach(a=>{const h=new T(s,s,o,8),c=new p(h,l);c.position.set(a[0],a[1],a[2]),this.ship.add(c);const m=new T(i,i,t,8),u=new p(m,l);u.position.set(a[0],a[1]+o*.5+t*.5,a[2]),u.rotation.x=Math.PI/2,u.rotation.z=Math.PI/6,this.ship.add(u)})}createSurfaceTrenches(e){const i=e*.01,t=e*.01,s=e*.3,o=new y({color:2236979,metalness:.7,roughness:.8,emissive:1118498,emissiveIntensity:.3}),l=new x(i,t,s),r=new p(l,o);r.position.set(0,e*.035,e*.1),this.ship.add(r);const n=new x(i,t,s*.7),a=new p(n,o);a.position.set(-e*.07,e*.035,e*.05),this.ship.add(a);const h=new p(n,o);h.position.set(e*.07,e*.035,e*.05),this.ship.add(h)}createShieldGenerators(e){const i=e*.02,t=e*.05,s=e*.35,o=new y({color:3368618,metalness:.2,roughness:.3,transparent:!0,opacity:.6,emissive:1122884,emissiveIntensity:.3}),l=new w(i,16,16,0,Math.PI*2,0,Math.PI/2),r=new p(l,o);r.position.set(-e*.08,t,s),r.rotation.x=Math.PI,this.ship.add(r);const n=new w(i,16,16,0,Math.PI*2,0,Math.PI/2),a=new p(n,o);a.position.set(e*.08,t,s),a.rotation.x=Math.PI,this.ship.add(a)}createTeleportBeam(e){const i=e*.03,t=e*.2,s=e*.8,o=new C({uniforms:{time:{value:0},color:{value:new B(3394815)},pulseFrequency:{value:12},pulseAmplitude:{value:.3}},vertexShader:`
                varying vec2 vUv;
                
                void main() {
                    vUv = uv;
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
                }
            `,fragmentShader:`
                uniform float time;
                uniform vec3 color;
                uniform float pulseFrequency;
                uniform float pulseAmplitude;
                varying vec2 vUv;
                
                // Improved pattern with scrolling and pulsing
                void main() {
                    // Create primary energy pattern - vertical striations
                    float verticalPattern = sin(vUv.y * 50.0 - time * 3.0) * 0.5 + 0.5;
                    
                    // Create horizontal pulse bands
                    float horizontalPulse = sin(vUv.y * pulseFrequency - time * 2.0) * pulseAmplitude + (1.0 - pulseAmplitude);
                    
                    // Edge glow effect with distortion
                    float edgeEffect = smoothstep(0.0, 0.4, vUv.x) * smoothstep(1.0, 0.6, vUv.x);
                    
                    // Swirling energy effect
                    float swirl = sin(vUv.y * 30.0 + vUv.x * 5.0 + time * 4.0) * 0.5 + 0.5;
                    
                    // Combine effects
                    float pattern = mix(verticalPattern, swirl, 0.5) * horizontalPulse * edgeEffect;
                    
                    // Add vertical fade for more realistic beam
                    float opacity = (1.0 - vUv.y * 0.8) * 0.9;
                    
                    // Pulsing brightness based on time
                    float pulse = sin(time * 3.0) * 0.1 + 0.9;
                    
                    // Combine final color 
                    vec3 finalColor = color * pulse;
                    
                    // Output final color with combined opacity
                    gl_FragColor = vec4(finalColor, opacity * pattern);
                }
            `,transparent:!0,side:R,blending:P}),l=new T(t,i,s,32,16,!0);this.teleportBeam=new p(l,o),this.teleportBeam.position.set(0,-s/2,-e*.1),this.teleportBeam.rotation.x=Math.PI,this.teleportBeam.visible=!1,this.ship.add(this.teleportBeam),this.createTeleportParticles(e),this.createBeamImpactRing(e)}createBeamImpactRing(e){const i=new j(e*.1,e*.22,32),t=new C({uniforms:{time:{value:0},color:{value:new B(3394815)}},vertexShader:`
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
                }
            `,fragmentShader:`
                uniform float time;
                uniform vec3 color;
                varying vec2 vUv;
                
                void main() {
                    // Animated ripple effect
                    float ripple = sin(distance(vUv, vec2(0.5)) * 20.0 - time * 5.0) * 0.5 + 0.5;
                    
                    // Rotating element
                    float angle = atan(vUv.y - 0.5, vUv.x - 0.5);
                    float rotatingPattern = sin(angle * 8.0 + time * 3.0) * 0.5 + 0.5;
                    
                    // Pulsing opacity
                    float pulse = sin(time * 2.0) * 0.3 + 0.7;
                    
                    // Combine patterns
                    float pattern = mix(ripple, rotatingPattern, 0.5) * pulse;
                    
                    gl_FragColor = vec4(color, pattern * 0.7);
                }
            `,transparent:!0,side:R,blending:P,depthWrite:!1});this.impactRing=new p(i,t),this.impactRing.position.set(0,-e*1,-e*.1),this.impactRing.rotation.x=-Math.PI/2,this.impactRing.visible=!1,this.ship.add(this.impactRing)}createTeleportParticles(e){const t=new E,s=new Float32Array(800*3),o=new Float32Array(800*3),l=new Float32Array(800);for(let n=0;n<800;n++){const a=n*3,h=Math.random()>.3,c=h?Math.random()*e*.03:e*.03+Math.random()*e*.17,m=Math.random()*Math.PI*2,u=-(Math.random()*e*.8);s[a]=c*Math.cos(m),s[a+1]=u,s[a+2]=c*Math.sin(m),h?(o[a]=.3+Math.random()*.2,o[a+1]=.9+Math.random()*.1,o[a+2]=1):(o[a]=.1+Math.random()*.1,o[a+1]=.7+Math.random()*.3,o[a+2]=.9+Math.random()*.1),l[n]=h?e*.002+Math.random()*e*.002:e*.004+Math.random()*e*.006}t.setAttribute("position",new v(s,3)),t.setAttribute("color",new v(o,3)),t.setAttribute("size",new v(l,1));const r=new C({uniforms:{time:{value:0},pointTexture:{value:this.createParticleTexture()}},vertexShader:`
                attribute float size;
                attribute vec3 color;
                varying vec3 vColor;
                uniform float time;
                
                void main() {
                    vColor = color;
                    
                    // Animate size with time
                    float pulseFactor = sin(time * 2.0 + position.z * 0.1) * 0.3 + 0.7;
                    
                    // Calculate position
                    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
                    
                    // Size attenuation
                    gl_PointSize = size * pulseFactor * (300.0 / -mvPosition.z);
                    gl_Position = projectionMatrix * mvPosition;
                }
            `,fragmentShader:`
                uniform sampler2D pointTexture;
                varying vec3 vColor;
                
                void main() {
                    // Sample soft particle texture
                    vec4 texColor = texture2D(pointTexture, gl_PointCoord);
                    
                    // Apply color
                    gl_FragColor = vec4(vColor, texColor.r);
                }
            `,transparent:!0,depthWrite:!1,blending:P,vertexColors:!0});this.teleportParticles=new k(t,r),this.teleportParticles.visible=!1,this.teleportParticles.position.set(0,0,-e*.1),this.ship.add(this.teleportParticles)}createParticleTexture(){const e=document.createElement("canvas");e.width=64,e.height=64;const i=e.getContext("2d"),t=i.createRadialGradient(32,32,0,32,32,32);t.addColorStop(0,"rgba(255,255,255,1)"),t.addColorStop(.3,"rgba(255,255,255,0.8)"),t.addColorStop(.5,"rgba(255,255,255,0.4)"),t.addColorStop(1,"rgba(255,255,255,0)"),i.fillStyle=t,i.fillRect(0,0,64,64);const s=new Q(e);return s.needsUpdate=!0,s}createEngineTrailParticles(e,i,t){const o=new E,l=new Float32Array(200*3),r=new Float32Array(200*3),n=new Float32Array(200),a=[],h=5;for(let m=0;m<h;m++){const u=(m-(h-1)/2)*(t/(h-1)*.8);a.push(u)}for(let m=0;m<200;m++){const u=m*3,g=Math.floor(Math.random()*a.length),b=a[g],S=(Math.random()-.5)*e*.01,M=(Math.random()-.5)*e*.01,I=Math.random()*e*.5;l[u]=b+S,l[u+1]=M,l[u+2]=i+b*.05+I,r[u]=.5+Math.random()*.5,r[u+1]=.7+Math.random()*.3,r[u+2]=1,n[m]=(Math.random()*.5+.5)*e*.004}o.setAttribute("position",new v(l,3)),o.setAttribute("color",new v(r,3)),o.setAttribute("size",new v(n,1));const c=new C({uniforms:{time:{value:0},pointTexture:{value:this.createParticleTexture()}},vertexShader:`
                attribute float size;
                attribute vec3 color;
                varying vec3 vColor;
                uniform float time;
                
                void main() {
                    vColor = color;
                    
                    // Animate size with time
                    float pulseFactor = sin(time * 2.0 + position.z * 0.1) * 0.3 + 0.7;
                    
                    // Calculate position
                    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
                    
                    // Size attenuation
                    gl_PointSize = size * pulseFactor * (300.0 / -mvPosition.z);
                    gl_Position = projectionMatrix * mvPosition;
                }
            `,fragmentShader:`
                uniform sampler2D pointTexture;
                varying vec3 vColor;
                
                void main() {
                    // Sample soft particle texture
                    vec4 texColor = texture2D(pointTexture, gl_PointCoord);
                    
                    // Apply color
                    gl_FragColor = vec4(vColor, texColor.r);
                }
            `,transparent:!0,depthWrite:!1,blending:P,vertexColors:!0});this.engineTrailParticles=new k(o,c),this.ship.add(this.engineTrailParticles)}setEnginesPower(e){if(this.engineGlows.forEach((i,t)=>{t%2===0?(i.material.emissiveIntensity=.8+e*1.2,i.material.opacity=.5+e*.5):(i.material.emissiveIntensity=.5+e*.8,i.material.opacity=.2+e*.3);const o=1+e*.8;i.scale.set(o,o,o*1.2)}),this.engineTrailParticles&&(this.engineTrailParticles.visible=e>.2,this.engineTrailParticles.geometry.attributes.size)){const i=this.engineTrailParticles.geometry.attributes.size.array,t=this.engineTrailParticles.userData.baseSizes||Array.from(i);this.engineTrailParticles.userData.baseSizes||(this.engineTrailParticles.userData.baseSizes=t);for(let s=0;s<i.length;s++)i[s]=t[s]*(1+e*2);this.engineTrailParticles.geometry.attributes.size.needsUpdate=!0}}activateTeleportBeam(){this.teleportBeam&&(this.teleportBeam.visible=!0,this.teleportParticles.visible=!0,this.impactRing.visible=!0,this.teleportBeamActive=!0,this.teleportBeam.material.uniforms.time.value=0,this.impactRing.material.uniforms.time.value=0,this.teleportParticles.material.uniforms&&(this.teleportParticles.material.uniforms.time.value=0))}deactivateTeleportBeam(){this.teleportBeam&&(this.teleportBeam.visible=!1,this.teleportParticles.visible=!1,this.impactRing.visible=!1,this.teleportBeamActive=!1)}updateTeleportBeam(e){if(!this.teleportBeamActive)return;const i=.02;if(this.teleportBeam&&this.teleportBeam.material.uniforms){this.teleportBeam.material.uniforms.time.value+=i;const t=.3+Math.sin(e*Math.PI*6)*.1;this.teleportBeam.material.uniforms.pulseAmplitude.value=t}if(this.impactRing&&this.impactRing.material.uniforms){this.impactRing.material.uniforms.time.value+=i;const t=1+Math.sin(e*Math.PI*3)*.2;this.impactRing.scale.set(t,t,1)}if(this.teleportParticles&&this.teleportParticles.material.uniforms){this.teleportParticles.material.uniforms.time.value+=i;const t=this.teleportParticles.geometry.attributes.position.array;for(let s=0;s<t.length;s+=3)if(t[s+1]-=5,t[s]+=(Math.random()-.5)*2,t[s+2]+=(Math.random()-.5)*2,t[s+1]<-1e3){const l=Math.random()>.3?Math.random()*40:40+Math.random()*180,r=Math.random()*Math.PI*2;t[s]=l*Math.cos(r),t[s+1]=-(Math.random()*400),t[s+2]=l*Math.sin(r)}this.teleportParticles.geometry.attributes.position.needsUpdate=!0}this.engineTrailParticles&&this.engineTrailParticles.material.uniforms&&(this.engineTrailParticles.material.uniforms.time.value+=i)}}class le{constructor(e,i,t,s){this.scene=e,this.camera=i,this.spaceship=t,this.audio=s,this.isPlaying=!1,this.sequenceTime=0,this.onComplete=null,this.skipEnabled=!1,this.initialCameraPosition=null,this.initialCameraRotation=null,this.starDreadnought=new re(e),this.setupPortalEffect(),this.setupOverlay(),this.dialogueBox=null,this.dialogueText=null,this.currentDialogueIndex=0,this.isTyping=!1,this.typeInterval=null,this.introSounds={},this.dialogueWavs=[],this.dialogueLines=["CORP CONTROLLER: [static] Belter #337, status check. Your cryostasis cycle is now complete.",`CORP CONTROLLER: Welcome to your deployment in the Sol System, circa 2077. As you can see, Earth is... well... let's just say "available for unrestricted mining operations" now.`,'CORP CONTROLLER: CorpEx Resource Acquisition reminds you that all planetary bodies in this system are now classified as "unclaimed assets" following the... unfortunate global circumstances.',"CORP CONTROLLER: Your primary objective is resource extraction from the asteroid belt. Initial scans show promising mineral concentrations untouched since the evacuation.","CORP CONTROLLER: The Stargate remains your lifeline. Return for fuel, upgrades, trading, and your allocated 15 minutes of daily entertainment. Remember, a happy belter is a productive belter!","CORP CONTROLLER: Resource extraction targets are non-negotiable. Failure to meet quotas will result in extension of your 42-year contract.","CORP CONTROLLER: Oh, and our long-range scans have detected spectral drone activity in adjacent sectors. Remnants of old defense systems, probably. Nothing a resourceful belter like you can't handle.","CORP CONTROLLER: Connection terminating in 3...2...1... Don't die out there, #337. Replacement clones are expensive.","[TRANSMISSION TERMINATED]","[BELTER #337 DEPLOYMENT ACTIVE]"],console.log("Intro sequence initialized"),this.loadDialogueWavs(),this.createIntroSoundEffects()}loadDialogueWavs(){console.log("Loading dialogue WAV files...");try{for(let e=1;e<=8;e++){const i=K(`sounds/dialogue/${e}.wav`);console.log(`Attempting to load dialogue file: ${i}`);const t=new Audio;t.addEventListener("canplaythrough",()=>{console.log(`Dialogue WAV ${e} loaded successfully`)}),t.addEventListener("error",s=>{console.warn(`Dialogue WAV ${e} not found or couldn't be loaded - this is normal if you haven't added the files yet`)}),t.src=i,this.dialogueWavs.push(t)}console.log("Dialogue WAV files setup complete - they'll be used if available")}catch(e){console.error("Error in dialogue WAV files setup:",e)}}createIntroSoundEffects(){if(typeof Tone>"u"){console.error("Tone.js not available for intro sound effects");return}try{console.log("Creating intro sequence sound effects..."),this.createWarpSound(),this.createShipArrivalSound(),this.createTeleportSound(),console.log("Intro sequence sound effects created")}catch(e){console.error("Error creating intro sound effects:",e)}}createWarpSound(){try{const e=this.audio&&this.audio.masterEQ?this.audio.masterEQ:Tone.Destination,i=new Tone.Filter({type:"lowpass",frequency:2e3,Q:2}).connect(e),t=new Tone.Reverb({decay:2,wet:.5}).connect(i),s=new Tone.FMSynth({harmonicity:3,modulationIndex:10,oscillator:{type:"sine"},envelope:{attack:.1,decay:.2,sustain:.8,release:1.5},modulation:{type:"square"},modulationEnvelope:{attack:.5,decay:.1,sustain:.2,release:.5}}).connect(t),o=new Tone.Filter({type:"bandpass",frequency:700,Q:.6}).connect(e),l=new Tone.Gain(.3).connect(o),r=new Tone.Noise("pink").connect(l);this.introSounds.warp={lastPlayTime:0,play:()=>{if(this.audio&&this.audio.muted)return;const n=Tone.now();if(n-this.introSounds.warp.lastPlayTime<.1){console.log("Preventing too rapid warp sound playback");return}this.introSounds.warp.lastPlayTime=n;const a=this.audio?this.audio.sfxVolume*.36:.18;s.volume.value=Tone.gainToDb(a),r.start(),s.triggerAttack("C5",n),s.frequency.exponentialRampTo("C2",2,n),l.gain.setValueAtTime(.18,n),l.gain.exponentialRampTo(.01,3,n+1),setTimeout(()=>{s.triggerRelease(),setTimeout(()=>{r.stop()},500)},3e3)}}}catch(e){console.error("Error creating warp sound:",e)}}createShipArrivalSound(){try{const e=this.audio&&this.audio.masterEQ?this.audio.masterEQ:Tone.Destination,i=new Tone.Filter({type:"lowpass",frequency:1200,Q:1}).connect(e),t=new Tone.PolySynth(Tone.Synth,{oscillator:{type:"triangle"},envelope:{attack:.02,decay:.3,sustain:.1,release:.8}}).connect(i),s=new Tone.Filter({type:"lowpass",frequency:200,Q:.5}).connect(e),o=new Tone.Synth({oscillator:{type:"sine"},envelope:{attack:.1,decay:.3,sustain:.6,release:1}}).connect(s);this.introSounds.shipArrival={play:()=>{if(this.audio&&this.audio.muted)return;const l=Tone.now(),r=this.audio?this.audio.sfxVolume*.42:.24;t.volume.value=Tone.gainToDb(r),o.volume.value=Tone.gainToDb(r*.8),t.triggerAttackRelease(["G3","D4","A4"],1.5,l),o.triggerAttack("G1",l),o.frequency.exponentialRampTo("C2",2,l+.5),setTimeout(()=>{o.triggerRelease()},2e3)}}}catch(e){console.error("Error creating ship arrival sound:",e)}}createTeleportSound(){try{const e=this.audio&&this.audio.masterEQ?this.audio.masterEQ:Tone.Destination,i=new Tone.Filter({type:"bandpass",frequency:800,Q:2}).connect(e),t=new Tone.Chorus({frequency:1.5,delayTime:3.5,depth:.7,wet:.5}).connect(i).start(),s=new Tone.Synth({oscillator:{type:"sine"},envelope:{attack:.05,decay:.2,sustain:.8,release:1}}).connect(t),o=new Tone.Filter({type:"highpass",frequency:2e3,Q:1}).connect(e),l=new Tone.Synth({oscillator:{type:"square"},envelope:{attack:.01,decay:.1,sustain:.6,release:.5}}).connect(o);this.introSounds.teleport={play:()=>{if(this.audio&&this.audio.muted)return;const r=Tone.now(),n=this.audio?this.audio.sfxVolume*.3:.18;s.volume.value=Tone.gainToDb(n),l.volume.value=Tone.gainToDb(n*.4),s.triggerAttack("C4",r),s.frequency.exponentialRampTo("C6",1.5,r),l.triggerAttackRelease("E7",.1,r+.3),setTimeout(()=>{l.triggerAttackRelease("G7",.1,r+.5)},200),setTimeout(()=>{s.triggerRelease()},2e3)}}}catch(e){console.error("Error creating teleport sound:",e)}}setupDialogueUI(){this.dialogueBox=document.createElement("div"),this.dialogueBox.id="intro-dialogue",this.dialogueBox.style.position="fixed",this.dialogueBox.style.bottom="50px",this.dialogueBox.style.left="50%",this.dialogueBox.style.transform="translateX(-50%)",this.dialogueBox.style.width="80%",this.dialogueBox.style.maxWidth="800px",this.dialogueBox.style.backgroundColor="rgba(0, 0, 0, 0.7)",this.dialogueBox.style.color="#30f0c0",this.dialogueBox.style.border="1px solid #30f0c0",this.dialogueBox.style.borderRadius="5px",this.dialogueBox.style.padding="15px",this.dialogueBox.style.fontFamily="Courier New, monospace",this.dialogueBox.style.fontSize="16px",this.dialogueBox.style.zIndex="10000",this.dialogueBox.style.textShadow="0 0 5px #30f0c0",this.dialogueBox.style.boxShadow="0 0 10px rgba(48, 240, 192, 0.3)",this.dialogueBox.style.opacity="0",this.dialogueBox.style.transition="opacity 0.5s",this.dialogueText=document.createElement("div"),this.dialogueText.style.lineHeight="1.5",this.dialogueBox.appendChild(this.dialogueText),document.body.appendChild(this.dialogueBox),setTimeout(()=>{this.dialogueBox.style.opacity="1"},200)}typeNextDialogue(){if(this.currentDialogueIndex>=this.dialogueLines.length)return;const e=this.dialogueLines[this.currentDialogueIndex];if(this.currentDialogueIndex<8&&this.dialogueWavs[this.currentDialogueIndex])try{const t=this.dialogueWavs[this.currentDialogueIndex];if(t.readyState>0&&t.error===null){t.volume=this.audio?this.audio.sfxVolume*.8:.5,t.currentTime=0;const s=t.play();s!==void 0&&s.catch(o=>{console.warn(`Couldn't play dialogue WAV ${this.currentDialogueIndex}: ${o.message}`)})}else console.log(`Skipping dialogue WAV ${this.currentDialogueIndex+1} (not loaded)`)}catch(t){console.warn(`Error playing dialogue WAV ${this.currentDialogueIndex+1}, continuing without audio`,t.message)}this.currentDialogueIndex++,this.dialogueText.textContent="",this.dialogueBox.style.opacity==="0"&&(this.dialogueBox.style.opacity="1");let i=0;this.isTyping=!0,this.typeInterval&&clearInterval(this.typeInterval),e.includes("TRANSMISSION TERMINATED")||e.includes("DEPLOYMENT ACTIVE")?this.dialogueText.style.color="#ff3030":this.dialogueText.style.color="#30f0c0",this.typeInterval=setInterval(()=>{if(i<e.length){if(this.dialogueText.textContent+=e.charAt(i),i++,this.audio&&this.audio.playSound&&i%3===0&&typeof this.audio.playSound=="function")try{this.audio.playSound("uiClick",.1)}catch{}}else if(clearInterval(this.typeInterval),this.typeInterval=null,this.isTyping=!1,this.sequenceTime<22){const t=Math.max(e.length*50,3e3);setTimeout(()=>{!this.isTyping&&this.isPlaying&&this.typeNextDialogue()},t)}},30)}setupPortalEffect(){const e=new j(0,400,64),i=new C({uniforms:{time:{value:0},color:{value:new B(6697898)}},vertexShader:`
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
                }
            `,fragmentShader:`
                uniform float time;
                uniform vec3 color;
                varying vec2 vUv;
                
                void main() {
                    float distFromCenter = length(vUv - vec2(0.5, 0.5)) * 2.0;
                    float ripple = sin(distFromCenter * 20.0 - time * 3.0) * 0.5 + 0.5;
                    float alpha = (1.0 - distFromCenter) * ripple;
                    
                    vec3 finalColor = color * (0.8 + ripple * 0.4);
                    gl_FragColor = vec4(finalColor, alpha);
                }
            `,transparent:!0,side:R});this.warpPortal=new p(e,i);const t=500,s=new E,o=new Float32Array(t*3);for(let r=0;r<t;r++){const n=Math.random()*Math.PI*2,a=350+Math.random()*150;o[r*3]=Math.cos(n)*a,o[r*3+1]=Math.sin(n)*a,o[r*3+2]=(Math.random()-.5)*50}s.setAttribute("position",new v(o,3));const l=new W({color:11154431,size:3,transparent:!0,blending:P});this.portalParticles=new k(s,l),this.warpTunnel=new O,this.warpTunnel.add(this.warpPortal),this.warpTunnel.add(this.portalParticles)}setupOverlay(){this.overlay=document.createElement("div"),this.overlay.id="intro-overlay",this.overlay.style.position="fixed",this.overlay.style.top="0",this.overlay.style.left="0",this.overlay.style.width="100%",this.overlay.style.height="100%",this.overlay.style.backgroundColor="#aa33ff",this.overlay.style.opacity="0",this.overlay.style.transition="opacity 0.5s",this.overlay.style.pointerEvents="none",this.overlay.style.zIndex="9999",document.body.appendChild(this.overlay)}startSequence(e){this.isPlaying||(console.log("Starting intro sequence..."),this.isPlaying=!0,this.sequenceTime=0,this.onComplete=e,this.initialCameraPosition=this.camera.position.clone(),this.initialCameraRotation=this.camera.rotation.clone(),this.camera.position.set(0,6e3,12e3),this.camera.lookAt(3e4,5e3,0),this.spaceship&&this.spaceship.mesh&&(this.spaceship.mesh.visible=!1,this.spaceship.thrust&&(this.spaceship.thrust.forward=!1,this.spaceship.thrust.backward=!1,this.spaceship.thrust.left=!1,this.spaceship.thrust.right=!1,this.spaceship.thrust.boost=!1),this.spaceship.velocity&&this.spaceship.velocity.set(0,0,0)),this.scene.add(this.warpTunnel),this.starDreadnought.ship.position.set(35e3,5e3,0),this.starDreadnought.ship.rotation.y=Math.PI/2,this.starDreadnought.ship.visible=!1,this.animate=this.animate.bind(this),this.lastTime=performance.now(),requestAnimationFrame(this.animate),this.setupSkipHandler(),this.setupDialogueUI(),setTimeout(()=>{this.typeNextDialogue()},2e3),this.introSounds.warp&&(this.introSounds.warp.lastPlayTime=Tone.now()-1,this.introSounds.warp.play()))}animate(e){if(!this.isPlaying)return;const i=Math.min((e-this.lastTime)/1e3,.1)*.4;if(this.lastTime=e,this.sequenceTime+=i,this.sequenceTime<14)this.updateArrivalPhase(this.sequenceTime/14);else if(this.sequenceTime<24)this.updateDeparturePhase((this.sequenceTime-14)/10);else{this.completeSequence();return}requestAnimationFrame(this.animate)}updateArrivalPhase(e){if(this.warpPortal&&this.warpPortal.material.uniforms&&(this.warpPortal.material.uniforms.time.value+=.016),this.warpTunnel.position.set(3e4,5e3,0),this.warpTunnel.rotation.z=Math.PI/2,e<.2){const t=e/.2*3.5;this.warpTunnel.scale.set(t,t,1),this.camera.position.set(0,6e3,12e3),this.camera.lookAt(3e4,5e3,0)}if(e>=.2&&e<.7){e>=.2&&!this.starDreadnought.ship.visible&&(this.starDreadnought.ship.visible=!0,this.flashOverlay(.3),this.introSounds.shipArrival&&this.introSounds.shipArrival.play());const i=(e-.2)/.5,t=i<.5?2*i*i:1-Math.pow(-2*i+2,2)/2,s=new f(3e4,5e3,0),o=new f(26e3,5300,-2e3),l=new f(22e3,5e3,0),r=new f,n=new f,a=new f;r.copy(s).multiplyScalar(Math.pow(1-t,2)),n.copy(o).multiplyScalar(2*(1-t)*t),a.copy(l).multiplyScalar(t*t);const h=new f().add(r).add(n).add(a);h.y+=Math.sin(e*Math.PI*3)*80,this.starDreadnought.ship.position.copy(h);const c=.4+t*.6;if(this.starDreadnought.setEnginesPower(c),e>.3){const u=Math.min((e-.3)/.3,1);this.portalParticles.material&&(this.portalParticles.material.opacity=1-u),this.warpPortal.material&&(this.warpPortal.material.opacity=1-u)}const m=this.starDreadnought.ship.position.clone();this.camera.position.set(m.x-3e3,m.y+1e3,8e3),this.camera.lookAt(m)}if(e>=.7){if(this.portalParticles.material&&(this.portalParticles.material.opacity=0),this.warpPortal.material&&(this.warpPortal.material.opacity=0),e<.75&&!this.starDreadnought.teleportBeamActive&&(this.starDreadnought.activateTeleportBeam(),this.introSounds.teleport&&this.introSounds.teleport.play()),this.starDreadnought.updateTeleportBeam(e),e>.8&&this.spaceship&&!this.spaceship.mesh.visible){const o=this.starDreadnought.ship.position;this.spaceship.mesh.position.set(o.x,o.y-2e3,o.z),this.spaceship.isDocked?(console.log("Undocking player ship during intro sequence"),this.spaceship.isDocked=!1,this.spaceship.mesh.visible=!0):this.spaceship.mesh.visible=!0,this.finalPlayerPosition=this.spaceship.mesh.position.clone(),this.createPlayerShieldEffect(),this.flashOverlay(.3)}const i=this.starDreadnought.ship.position.clone(),t=(e-.7)/.3;this.camera.position.set(i.x-2e3+t*2e3,i.y+2e3,5e3-t*3e3);const s=i.y-1e3;this.camera.lookAt(i.x,s,i.z)}}updateDeparturePhase(e){const i=new f(3e4,5e3,0);if(e<.5){if(e<.1&&this.starDreadnought.teleportBeamActive&&this.starDreadnought.deactivateTeleportBeam(),e>.1){this.warpTunnel.position.copy(i),this.warpTunnel.visible=!0,this.warpTunnel.rotation.z=Math.PI/2,this.warpTunnel.scale.set(3.5,3.5,1);const s=Math.min((e-.1)/.3,1);this.portalParticles.material&&(this.portalParticles.material.opacity=s),this.warpPortal.material&&(this.warpPortal.material.opacity=s)}if(e>.2){const s=Math.min((e-.2)/.3,1),o=Math.PI/2,l=3*Math.PI/2;this.starDreadnought.ship.rotation.y=o+(l-o)*s}const t=this.starDreadnought.ship.position.clone();this.camera.position.set(t.x,t.y+3e3,t.z+8e3),this.camera.lookAt(t)}else{const t=(e-.5)/.5,s=new f(22e3,5e3,0),o=new f(35e3,5e3,0),l=t*t;let r;if(t<.7){const h=l/.5;r=new f().lerpVectors(s,i,h)}else{const h=(t-.7)/.3;r=new f().lerpVectors(i,o,h)}if(this.starDreadnought.ship.position.copy(r),this.starDreadnought.setEnginesPower(.7+t*.8),t>.6&&t<.63&&(this.flashOverlay(.4),this.introSounds.warp&&Math.abs(t-.61)<.01&&this.introSounds.warp.play()),t>.65&&(this.starDreadnought.ship.visible=!1),t>.9){const c=(1-(t-.9)/.1)*3.5;this.warpTunnel.scale.set(c,c,1)}const n=s.clone();this.camera.position.set(n.x-2e3,n.y+3e3,1e4);const a=new f().lerpVectors(s,i,.5);this.camera.lookAt(a)}}createPlayerShieldEffect(){const e=new w(30,32,32),i=new z({color:8965375,transparent:!0,opacity:.6,side:R});this.playerShieldEffect=new p(e,i),this.playerShieldEffect.scale.set(1.2,1.2,1.2),this.spaceship.mesh.add(this.playerShieldEffect),this.shieldPulseTime=0}updatePortalEffect(){this.warpPortal&&this.warpPortal.material.uniforms&&(this.warpPortal.material.uniforms.time.value+=.016)}flashOverlay(e=.6){this.overlay&&(this.overlay.style.opacity=e.toString(),setTimeout(()=>{this.overlay.style.opacity="0"},300))}setupSkipHandler(){const e=document.createElement("div");e.id="skip-intro-button",e.textContent="SKIP INTRO",e.style.position="fixed",e.style.bottom="10px",e.style.left="50%",e.style.transform="translateX(-50%)",e.style.padding="10px 15px",e.style.backgroundColor="rgba(0, 0, 0, 0.7)",e.style.color="#30f0c0",e.style.border="1px solid #30f0c0",e.style.borderRadius="5px",e.style.cursor="pointer",e.style.zIndex="10000",e.style.fontFamily="Courier New, monospace",e.style.boxShadow="0 0 10px rgba(48, 240, 192, 0.3)",e.addEventListener("click",()=>{this.skipSequence()}),document.body.appendChild(e),this.skipButton=e}skipSequence(){console.log("Skipping intro sequence"),this.completeSequence(),this.spaceship&&(this.spaceship.isDocked=!0,this.spaceship.mesh&&this.spaceship.mesh.position.set(22e3,5e3,0)),window.gameInstance&&window.gameInstance.controls&&window.gameInstance.controls.dockingSystem&&setTimeout(()=>{window.gameInstance.controls.dockingSystem.dockWithStargate(),console.log("Stargate UI shown after skip")},100)}completeSequence(){console.log("Intro sequence complete"),this.isPlaying=!1,this.scene.remove(this.warpTunnel),this.starDreadnought.ship.visible=!1,this.skipEnabled=!0,this.playerShieldEffect&&(this.spaceship.mesh.remove(this.playerShieldEffect),this.playerShieldEffect=null),this.skipButton&&(document.body.removeChild(this.skipButton),this.skipButton=null),this.overlay&&(document.body.removeChild(this.overlay),this.overlay=null),this.dialogueBox&&(document.body.removeChild(this.dialogueBox),this.dialogueBox=null),this.typeInterval&&(clearInterval(this.typeInterval),this.typeInterval=null),this.spaceship&&this.spaceship.mesh&&(this.spaceship.mesh.visible=!0,this.spaceship.isDocked&&(console.log("Forcing ship to undocked state after intro sequence"),this.spaceship.isDocked=!1),console.log("Player final position:",this.spaceship.mesh.position.x,this.spaceship.mesh.position.y,this.spaceship.mesh.position.z)),this.onComplete&&typeof this.onComplete=="function"&&setTimeout(()=>{console.log("Executing intro sequence completion callback"),this.onComplete()},100)}destroy(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.typeInterval&&(clearInterval(this.typeInterval),this.typeInterval=null),this.dialogueBox&&this.dialogueBox.parentNode&&this.dialogueBox.parentNode.removeChild(this.dialogueBox),this.overlay&&this.overlay.parentNode&&this.overlay.parentNode.removeChild(this.overlay),document.removeEventListener("keydown",this.skipHandler),this.portalMesh&&this.portalMesh.parent&&this.portalMesh.parent.remove(this.portalMesh),this.portalFlare&&this.portalFlare.parent&&this.portalFlare.parent.remove(this.portalFlare),this.portalMesh&&(this.portalMesh.geometry&&this.portalMesh.geometry.dispose(),this.portalMesh.material&&this.portalMesh.material.dispose()),this.portalFlare&&(this.portalFlare.geometry&&this.portalFlare.geometry.dispose(),this.portalFlare.material&&this.portalFlare.material.dispose()),this.starDreadnought&&typeof this.starDreadnought.destroy=="function"&&this.starDreadnought.destroy(),this.introSounds&&(Object.values(this.introSounds).forEach(e=>{e.dispose&&typeof e.dispose=="function"&&e.dispose()}),this.introSounds={}),this.scene=null,this.camera=null,this.spaceship=null,this.audio=null,this.starDreadnought=null,this.portalMesh=null,this.portalFlare=null,this.portalGeometry=null,this.portalMaterial=null,this.dialogueWavs=[]}}window.DEBUG_MODE=!1;window.vectorPool={pool:[],maxSize:100,get:function(d=0,e=0,i=0){return this.pool.length>0?this.pool.pop().set(d,e,i):new f(d,e,i)},release:function(d){this.pool.length<this.maxSize&&this.pool.push(d)}};class he{constructor(){D(this,"handleResize",()=>{this.renderer&&this.renderer.handleResize()});D(this,"handleVisibilityChange",()=>{document.hidden?this.pause():this.resume()});D(this,"handleKeyDown",e=>{if(e.key==="Escape"&&document.pointerLockElement&&document.exitPointerLock(),e.key.toLowerCase()==="m"&&this.audio){const i=this.audio.toggleMute();console.log(`Audio ${i?"muted":"unmuted"}`)}e.key.toLowerCase()==="d"&&e.shiftKey&&this.toggleDebugMode()});console.log("Initializing game..."),window.game=this,window.mainMessageBus=new ne,window.mainMessageBus.subscribe("game.over",this.gameOver.bind(this));try{if(console.log("Creating audio manager..."),this.audio=new Z,console.log("Creating renderer..."),this.renderer=new J,console.log("Renderer created, getting scene..."),this.scene=this.renderer.scene,this.camera=this.renderer.camera,console.log("Scene and camera references obtained"),this.scene.camera=this.camera,console.log("Initializing essential components..."),this.physics=new ee(this.scene),this.physics.setCamera(this.camera),this.environment=new te(this.scene),console.log("Creating spaceship..."),this.spaceship=new ie(this.scene),this.physics.setSpaceship(this.spaceship),this.environment.setSpaceship(this.spaceship),this.ui=new se(this.spaceship,this.environment),this.ui.setAudio(this.audio),this.controls=new oe(this.spaceship,this.physics,this.environment,this.ui),this.ui.setControls(this.controls),console.log("Initializing settings..."),this.ui.initializeSettings(this),this.isGameOver=!1,this.lastUpdateTime=performance.now(),this.frameCount=0,this.currentFPS=0,this.introSequenceActive=!1,this.gameTime=0,this.frameRateCap=0,this.ui&&this.ui.settings){if(this.ui.settings.settings.frameRateCap==="auto"){const e=this.ui.settings.monitorRefreshRate||60;e>65?(this.frameRateCap=0,console.log(`Defaulting to unlimited frame rate (refresh rate ${e}Hz > 65Hz)`)):(this.frameRateCap=e,console.log(`Defaulting to monitor refresh rate: ${e}Hz`))}else this.frameRateCap=parseInt(this.ui.settings.settings.frameRateCap)||0;console.log(`Applied frame rate cap from settings: ${this.frameRateCap}`)}this.lastFrameTime=0,this.actualFrameTime=0,this.frameStartTime=0,this.fpsBuffer=[],this.fpsBufferSize=15,console.log("Initializing difficulty manager..."),this.initializeDifficultyManager(),this.setupEventHandlers(),this.boundAnimate=this.animate.bind(this),this.deltaTime=0,this.initializeGameSequence()}catch(e){throw console.error("Error in game initialization:",e),e}}async initializeGameSequence(){try{if(console.log("Starting game initialization sequence..."),this.audio&&this.audio.audioContext&&this.audio.audioContext.state==="suspended")try{this.audio.resumeAudioContext()}catch{console.log("Audio context couldn't be resumed yet, will try again after user interaction")}this.ui&&this.ui.startScreen?(console.log("Showing start screen"),this.ui.startScreen.show()):(console.error("Start screen not found, falling back to default behavior"),this.fallbackToDefaultBehavior()),this.boundAnimate(),this.initializeRemainingSystemsAsync(),console.log("Game initialization sequence completed successfully")}catch(e){console.error("Error during game initialization sequence:",e),this.ui&&this.ui.showError?this.ui.showError("Failed to initialize game: "+e.message):alert("Failed to initialize game: "+e.message)}}async initializeRemainingSystemsAsync(){try{this.loadAudioAsync(),console.log("Initializing combat module asynchronously..."),this.combat||(this.combat=new ae(this.scene,this.spaceship),this.combat.world?console.log("Combat ECS world successfully created"):(console.log("Waiting for combat ECS world to initialize..."),setTimeout(()=>{this.combat.world&&this.combat.playerEntity?console.log("Combat ECS world and player entity initialized after delay"):(console.warn("Combat ECS world or player entity not available after delay, recreating..."),this.combat.createPlayerReferenceEntity&&this.combat.createPlayerReferenceEntity())},1e3))),setTimeout(()=>{this.initializeObjectPools(),this.preWarmBasicShaders()},100)}catch(e){console.error("Error initializing remaining systems:",e)}}async loadAudioAsync(){try{this.audio&&(console.log("Initializing audio system asynchronously..."),this.audio.initialize().then(()=>{console.log("Audio system initialization complete")}).catch(e=>{console.error("Error initializing audio:",e)}))}catch(e){console.error("Error loading audio:",e)}}preWarmBasicShaders(){console.log("Pre-warming essential shaders..."),this.projectileGeometry=new w(1.8,12,12),this.projectileMaterial=new y({color:65535,emissive:65535,emissiveIntensity:5,metalness:.7,roughness:.3});const e=new p(this.projectileGeometry,this.projectileMaterial);this.scene.add(e),this.renderer.renderer.compile(this.scene,this.camera),this.scene.remove(e),console.log("Essential shaders pre-warmed")}initializeObjectPools(){console.log("Initializing object pools..."),window.objectPool.createPool("hitEffect",()=>{this.hitEffectGeometry||(this.hitEffectGeometry=new w(1,8,8));const e=new z({color:16777215,transparent:!0,opacity:.8});return{mesh:new p(this.hitEffectGeometry,e),material:e,reset:function(t=16733440,s=1){this.material.color.set(t),this.material.opacity=.8,this.mesh.scale.set(s,s,s),this.mesh.visible=!0},clear:function(){this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh.visible=!1}}},20,100),window.objectPool.createPool("projectile",()=>{this.projectileGeometry||(this.projectileGeometry=new w(2,8,8));const e=new y({color:65535,emissive:65535,emissiveIntensity:1,metalness:.3,roughness:.2});return{mesh:new p(this.projectileGeometry,e),material:e,velocity:new f,reset:function(t,s,o=500,l=65535){this.mesh.position.copy(t),this.velocity.copy(s).normalize().multiplyScalar(o),this.material.color.set(l),this.material.emissive.set(l),this.mesh.visible=!0},clear:function(){this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh.visible=!1,this.velocity.set(0,0,0)}}},50,200),window.objectPool.createPool("particleEffect",()=>{const i=new E,t=new Float32Array(20*3),s=new Float32Array(20*3);for(let r=0;r<20;r++){const n=r*3;t[n]=0,t[n+1]=0,t[n+2]=0,s[n]=1,s[n+1]=1,s[n+2]=1}i.setAttribute("position",new v(t,3)),i.setAttribute("color",new v(s,3));const o=new W({size:3,transparent:!0,opacity:.8,vertexColors:!0,blending:P});return{system:new k(i,o),velocities:new Float32Array(20*3),lifetime:new Float32Array(20),maxLifetime:new Float32Array(20),reset:function(r,n=new B(1,1,1),a=3,h=20){this.system.position.copy(r);const c=this.system.geometry.attributes.position.array,m=this.system.geometry.attributes.color.array;this.system.material.size=a;for(let u=0;u<20;u++){const g=u*3;c[g]=0,c[g+1]=0,c[g+2]=0,m[g]=n.r,m[g+1]=n.g,m[g+2]=n.b;const b=Math.random()*Math.PI*2,S=Math.random()*Math.PI;this.velocities[g]=Math.sin(S)*Math.cos(b)*(Math.random()*h),this.velocities[g+1]=Math.sin(S)*Math.sin(b)*(Math.random()*h),this.velocities[g+2]=Math.cos(S)*(Math.random()*h),this.maxLifetime[u]=.5+Math.random()*1.5,this.lifetime[u]=this.maxLifetime[u]}this.system.geometry.attributes.position.needsUpdate=!0,this.system.geometry.attributes.color.needsUpdate=!0,this.system.visible=!0,this.system.parent||window.game.scene.add(this.system),this.animate()},animate:function(){if(!this.system.visible)return;const r=this.system.geometry.attributes.position.array;this.system.geometry.attributes.color.array;let n=!1;for(let a=0;a<20;a++){const h=a*3;if(this.lifetime[a]-=.016,this.lifetime[a]<=0)continue;n=!0,r[h]+=this.velocities[h]*.016,r[h+1]+=this.velocities[h+1]*.016,r[h+2]+=this.velocities[h+2]*.016;const c=this.lifetime[a]/this.maxLifetime[a];this.system.material.opacity=c}this.system.geometry.attributes.position.needsUpdate=!0,n?requestAnimationFrame(this.animate.bind(this)):this.clear()},clear:function(){this.system.parent&&this.system.parent.remove(this.system),this.system.visible=!1}}},10,50),console.log("Object pools initialized")}startDocked(){this.spaceship&&(this.spaceship.isDocked||this.spaceship.dock()),setTimeout(()=>{this.controls&&this.controls.dockingSystem?(this.controls.dockingSystem.dockWithStargate(),console.log("Stargate UI shown")):console.error("Controls or dockingSystem not available")},500)}initIntroSequence(){console.log("Initializing intro sequence..."),this.introSequence=new le(this.scene,this.camera,this.spaceship,this.audio),this.originalCameraPosition=this.camera.position.clone(),this.originalCameraRotation=this.camera.rotation.clone(),console.log("Intro sequence initialized")}startIntroSequence(){this.introSequence||this.initIntroSequence(),console.log("Starting intro sequence..."),this.introSequenceActive=!0,this.combat&&this.combat.world&&this.combat.enemySystem?(console.log("Freezing all enemies for intro sequence"),this.combat.enemySystem.freezeAllEnemies()):window.game&&window.game.ecsWorld&&window.game.ecsWorld.enemySystem&&(console.log("Freezing all enemies via global reference for intro sequence"),window.game.ecsWorld.enemySystem.freezeAllEnemies()),this.camera.position.set(0,6e3,12e3),this.camera.lookAt(3e4,5e3,0),this.controls&&this.controls.inputHandler&&(this.controls.inputHandler.enabled=!1),this.ui&&this.ui.stargateInterface&&(console.log("Explicitly hiding stargate UI before intro sequence"),this.ui.stargateInterface.hideStargateUI()),this.ui&&this.ui.hideUI(),this.spaceship&&this.spaceship.mesh&&(this.spaceship.mesh.visible=!1),this.introSequence.startSequence(()=>{this.completeIntroSequence()})}completeIntroSequence(){console.log("Intro sequence completed - final phase"),this.combat&&this.combat.world&&this.combat.enemySystem?(console.log("Unfreezing all enemies after intro sequence"),this.combat.enemySystem.unfreezeAllEnemies()):window.game&&window.game.ecsWorld&&window.game.ecsWorld.enemySystem&&(console.log("Unfreezing all enemies via global reference after intro sequence"),window.game.ecsWorld.enemySystem.unfreezeAllEnemies()),this.ui&&this.ui.stargateInterface&&(console.log("Explicitly hiding stargate UI after intro sequence"),this.ui.stargateInterface.hideStargateUI()),this.introSequenceActive=!1,this.ui&&(console.log("Showing game UI elements after intro completion"),this.ui.showUI()),this.spaceship&&this.spaceship.mesh&&(this.spaceship.mesh.visible=!0,this.spaceship.isDocked&&(console.log("Forcing undocked state in completeIntroSequence"),this.spaceship.isDocked=!1)),this.controls&&this.controls.inputHandler&&(console.log("Re-enabling player controls"),this.controls.inputHandler.enabled=!0),localStorage.setItem("introPlayed","true"),window.mainMessageBus&&window.mainMessageBus.publish("intro.completed",{}),console.log("Game starting after intro sequence")}setupEventHandlers(){window.addEventListener("resize",this.handleResize),document.addEventListener("visibilitychange",this.handleVisibilityChange),document.addEventListener("keydown",this.handleKeyDown)}update(e){if(this.isGameOver)return;if(this.isHordeActive&&(this.hordeSurvivalTime=performance.now()-this.hordeStartTime),this.physics.update(e),this.spaceship.update&&this.spaceship.update(e),this.difficultyManager&&!this.introSequenceActive&&!this.spaceship.isDocked&&this.difficultyManager.update(e),this.ui&&this.ui.updateCoordinates&&this.spaceship&&this.spaceship.mesh){const o=this.spaceship.mesh.position;this.ui.updateCoordinates(o.x,o.y,o.z)}performance.now();const i=this.actualFrameTime?1e3/this.actualFrameTime:60;this.fpsBuffer.push(i),this.fpsBuffer.length>this.fpsBufferSize&&this.fpsBuffer.shift();let t=0,s=0;for(let o=0;o<this.fpsBuffer.length;o++){const l=o+1;s+=this.fpsBuffer[o]*l,t+=l}if(this.currentFPS=Math.round(s/t),this.frameCount%5===0&&this.ui&&this.ui.updateFPS&&(this.frameRateCap>0?this.ui.updateFPS(this.currentFPS,this.frameRateCap):this.ui.updateFPS(this.currentFPS)),this.controls.update&&this.controls.update(),this.combat&&this.combat.updatePlayerReference)try{this.combat.updatePlayerReference()}catch(o){console.warn("Error updating player reference:",o)}else this.combat&&!this.combat.updatePlayerReference&&(console.warn("Combat module does not have updatePlayerReference method"),this.combat.createPlayerReferenceEntity&&!this.combat.playerEntity&&(console.log("Creating player entity directly since updatePlayerReference is not available"),this.combat.createPlayerReferenceEntity()));if(this.combat&&this.combat.update&&this.combat.update(e),this.environment.update&&this.environment.update(),this.ui.update&&this.ui.update(),this.updateAudio(),this.checkGameOver(),this.frameCount++,this.world&&!this.introSequenceActive)this.world.update(e);else if(this.world&&this.introSequenceActive&&this.world.entityManager&&this.world.systemManager)for(const o of this.world.systemManager.systems)o.constructor.name!=="EnemySystem"&&o.constructor.name!=="EnemyAISystem"&&o.constructor.name!=="CombatSystem"&&o.update(e)}updateAudio(){if(!(!this.audio||!this.spaceship))if(this.spaceship.isDocked)this.audio.stopSound("thrust");else if(this.spaceship.thrust.forward||this.spaceship.thrust.backward||this.spaceship.thrust.left||this.spaceship.thrust.right){this.audio.playSound("thrust");let i=.5;this.spaceship.thrust.forward&&(i+=.2),this.spaceship.thrust.backward&&(i+=.1),this.spaceship.thrust.left&&(i+=.1),this.spaceship.thrust.right&&(i+=.1),this.spaceship.thrust.boost&&(i*=1.5),this.audio.setThrustVolume(i)}else this.audio.stopSound("thrust")}checkGameOver(){if(!this.spaceship||this.spaceship.isDocked)return;if(this.spaceship.fuel<=0&&this.controls.dockingSystem&&!this.controls.dockingSystem.nearStargate){this.gameOver("Your ship ran out of fuel");return}const e=window.vectorPool.get(0,0,0),i=this.spaceship.mesh.position.distanceTo(e);if(window.vectorPool.release(e),i<400){this.gameOver("Your ship was destroyed by the sun's heat");return}}gameOver(e){if(!this.isGameOver){if(console.log("Game over:",e),this.isGameOver=!0,this.audio&&this.audio.playSound("explosion"),this.ui.showGameOver&&this.controls.resources){const i={resources:this.controls.resources,hordeMode:{active:this.isHordeActive,survivalTime:this.isHordeActive?this.getFormattedHordeSurvivalTime():"00:00",rawSurvivalTime:this.hordeSurvivalTime||0}};this.ui.showGameOver(i,e)}this.spaceship&&this.spaceship.thrust&&(this.spaceship.thrust.forward=!1,this.spaceship.thrust.backward=!1,this.spaceship.thrust.left=!1,this.spaceship.thrust.right=!1,this.spaceship.thrust.boost=!1),this.controls&&this.controls.inputHandler&&this.controls.inputHandler.exitPointerLock(),this.gameOverCleanupTimeout=setTimeout(()=>{const i=this.ui,t=this.audio;this.ui=null,this.audio=null,this.destroy(),this.ui=i,this.audio=t},5e3)}}animate(e){if(requestAnimationFrame(this.boundAnimate),!this.lastFrameTime){this.lastFrameTime=e,this.frameStartTime=performance.now();return}if(this.actualFrameTime=e-this.lastFrameTime,this.frameRateCap>0){const t=1e3/this.frameRateCap;if(e-this.lastFrameTime<t-.5)return;this.lastFrameTime+=t,e-this.lastFrameTime>t&&(this.lastFrameTime=e)}else this.lastFrameTime=e;const i=performance.now();this.deltaTime=Math.min(i-this.lastUpdateTime,100)/1e3,this.lastUpdateTime=i,this.update(this.deltaTime),this.renderer.render(),this.frameCount++}pause(){if(console.log("Game paused"),this.audio){this.audio.muted=!0;for(const e of Object.values(this.audio.sounds))e.muted=!0;for(const e of this.audio.music)e.muted=!0}}resume(){if(console.log("Game resumed"),this.lastUpdateTime=performance.now(),this.audio&&!this.audio.muted){for(const e of Object.values(this.audio.sounds))e.muted=!1;for(const e of this.audio.music)e.muted=!1}}initOptimizedECS(){return console.log("initOptimizedECS called - This is a placeholder implementation"),this.world&&typeof this.world.getSystem!="function"&&(console.log("Adding getSystem method to World class to fix compatibility issues"),this.world.getSystem=function(e){return this.systemManager&&typeof this.systemManager.getSystem=="function"?this.systemManager.getSystem(e):null}),!0}toggleDebugMode(){if(window.DEBUG_MODE=!window.DEBUG_MODE,console.log(`Debug mode ${window.DEBUG_MODE?"enabled":"disabled"}`),window.DEBUG_MODE)this.ui&&!document.getElementById("performance-stats")&&this.ui.initializePerformanceMonitor(),window.MemoryStats&&(window.MemoryStats.update(),window.MemoryStats.logReport());else{const e=document.getElementById("performance-stats");e&&e.remove(),this.ui&&this.ui.statsInterval&&(clearInterval(this.ui.statsInterval),this.ui.statsInterval=null)}window.playIntro=()=>this.startIntroSequence?(console.log("Manually triggering intro sequence"),this.startIntroSequence(),"Playing intro sequence..."):"Intro sequence not available"}initializeDifficultyManager(){this.difficultyManager={params:{maxEnemies:10,spawnInterval:3,enemyHealth:20,enemyDamage:15,enemySpeed:700},gameTime:0,currentLevel:1,update:function(e){this.gameTime+=e;const i=this.gameTime/60,t=Math.floor(i/3)+1;if(t!==this.currentLevel){this.currentLevel=t;const s=1+Math.min(this.currentLevel-1,4)*.5;this.params.maxEnemies=Math.min(10*s,30),this.params.spawnInterval=Math.max(3/s,1),this.params.enemyHealth=Math.floor(20*s),this.params.enemyDamage=Math.floor(15*s),this.params.enemySpeed=Math.min(700*(1+.2*(this.currentLevel-1)),1400),console.log(`Difficulty increased to level ${this.currentLevel} (${s}x)`),console.log(`Parameters: maxEnemies=${this.params.maxEnemies}, spawnInterval=${this.params.spawnInterval}`),console.log(`Health=${this.params.enemyHealth}, Damage=${this.params.enemyDamage}, Speed=${this.params.enemySpeed}`)}}}}activateHordeMode(){this.isHordeActive||(console.log("ACTIVATING HORDE MODE - EXTREME SURVIVAL CHALLENGE"),this.isHordeActive=!0,this.hordeStartTime=performance.now(),this.hordeSurvivalTime=0,this.audio&&this.audio.playSound("boink"),window.mainMessageBus.publish("horde.activated",{startTime:this.hordeStartTime}),this.ui&&this.ui.showNotification&&this.ui.showNotification("HORDE MODE ACTIVATED - SURVIVE!",5e3),this.spaceship&&this.spaceship.isDocked&&(console.log("Horde mode forcing undock from stargate"),this.spaceship.undock(),window.mainMessageBus.publish("player.requestUndock",{forced:!0,reason:"horde_mode_activation"}),setTimeout(()=>{console.log("Horde mode ensuring HUD is visible"),this.ui&&this.ui.showUI&&this.ui.showUI()},200)))}getFormattedHordeSurvivalTime(){const e=Math.floor(this.hordeSurvivalTime/1e3),i=Math.floor(e/60),t=e%60;return`${i.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`}destroy(){if(console.log("Cleaning up game resources..."),this.boundAnimate&&(cancelAnimationFrame(this.boundAnimate),this.boundAnimate=null),this.gameOverCleanupTimeout&&(clearTimeout(this.gameOverCleanupTimeout),this.gameOverCleanupTimeout=null),window.removeEventListener("resize",this.handleResize),document.removeEventListener("visibilitychange",this.handleVisibilityChange),document.removeEventListener("keydown",this.handleKeyDown),this.renderer&&(this.renderer.dispose(),this.renderer=null),this.audio&&(this.audio.dispose(),this.audio=null),this.physics&&(this.physics.dispose(),this.physics=null),this.spaceship&&(this.spaceship.dispose(),this.spaceship=null),this.environment&&(this.environment.dispose(),this.environment=null),this.controls&&(this.controls.dispose(),this.controls=null),this.ui&&(this.ui.dispose(),this.ui=null),this.combat&&(this.combat.dispose(),this.combat=null),this.introSequence&&(this.introSequence.destroy(),this.introSequence=null),this.world){if(this.world.entityManager){const e=[...this.world.entityManager.entities.keys()];for(const i of e)this.world.destroyEntity(i)}if(this.world.systemManager)for(const e of this.world.systemManager.systems)e.onDestroyed&&typeof e.onDestroyed=="function"&&e.onDestroyed();this.world=null}window.mainMessageBus&&window.mainMessageBus.unsubscribe("game.over",this.gameOver.bind(this)),window.game=null,window.vectorPool&&(window.vectorPool.pool=[]),window.objectPool&&window.objectPool.clearAllPools(),this.scene=null,this.camera=null,this.fpsBuffer=[],console.log("Game resources cleaned up successfully")}fallbackToDefaultBehavior(){localStorage.getItem("introPlayed")==="true"?(console.log("Intro already played, starting in docked state"),this.camera.position.set(0,1500,0),this.startDocked()):(console.log("First time playing, preparing for intro sequence"),this.spaceship&&!this.spaceship.isDocked&&this.spaceship.dock(),setTimeout(()=>{this.startIntroSequence()},500))}}window.objectPool={pools:{},createPool:function(d,e,i=10,t=100){if(!this.pools[d]){this.pools[d]={objects:[],factory:e,maxSize:t};for(let s=0;s<i;s++)this.pools[d].objects.push(e())}},get:function(d,...e){const i=this.pools[d];if(!i)return console.warn(`No pool exists for type: ${d}`),null;let t;return i.objects.length>0?t=i.objects.pop():t=i.factory(),typeof t.reset=="function"&&t.reset(...e),t},release:function(d,e){const i=this.pools[d];if(!i){console.warn(`No pool exists for type: ${d}`);return}i.objects.length<i.maxSize&&(typeof e.clear=="function"&&e.clear(),i.objects.push(e))},clearAllPools:function(){for(const d in this.pools)this.clearPool(d)},clearPool:function(d){const e=this.pools[d];if(!e){console.warn(`No pool exists for type: ${d}`);return}e.objects=[]}};function H(){console.log("DOM ready, starting game initialization..."),console.log("Creating game instance...");try{console.log("Checking for THREE module availability..."),console.log("THREE available:",typeof X<"u"),window.game=new he,console.log("Precomputing projectile assets and warming shaders..."),window.game.projectileGeometry=new w(1.8,12,12),window.game.projectileMaterial=new y({color:65535,emissive:65535,emissiveIntensity:5,metalness:.7,roughness:.3}),window.game.projectileGlowGeometry=new w(2.4,16,16),window.game.projectileGlowMaterial=new z({color:65535,transparent:!0,opacity:.4,blending:P}),console.log("Precomputing trail particle geometries..."),window.game.trailParticleGeometries=[];const d=20;for(let n=0;n<d;n++){const h=.5*(1-n/d),c=new w(h,8,8);window.game.trailParticleGeometries.push(c)}console.log("Warming shaders...");const e=new p(window.game.projectileGeometry,window.game.projectileMaterial),i=new p(window.game.projectileGlowGeometry,window.game.projectileGlowMaterial);e.add(i),window.game.scene.add(e),console.log("Precomputing explosion effect assets..."),window.game.explosionGeometry=new w(1,8,8),window.game.explosionMaterial=new z({color:16733440,transparent:!0,opacity:.8}),window.game.hitEffectGeometry=new w(1,8,8);const t=new O;window.game.scene.add(t);const s=20,o=[];for(let n=0;n<s;n++){const a=Math.random()*2+1,h=new p(window.game.explosionGeometry,window.game.explosionMaterial.clone());h.position.set(Math.random()*10-5,Math.random()*10-5,Math.random()*10-5),h.position.multiplyScalar(10).add(new f(0,-1e4,0)),t.add(h),o.push(h)}window.objectPool.createPool("explosionParticle",()=>{const n=window.game.explosionMaterial.clone();return{mesh:new p(window.game.explosionGeometry,n),material:n,velocity:new f,reset:function(h,c=1,m=16733440){h||(h=new f(0,0,0)),this.mesh.position.copy(h),this.mesh.scale.set(c,c,c),this.material.color.set(m),this.material.opacity=.8,this.mesh.visible=!0},clear:function(){this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh.visible=!1,this.velocity.set(0,0,0)}}},50,200);const l=[16733440,3381759,16711680,16776960],r=[];for(const n of l){const a=window.objectPool.get("hitEffect",n,1.5);a&&a.mesh&&(a.mesh.position.set(0,-10100,0),window.game.scene.add(a.mesh),r.push(a))}window.game.renderer.renderer.compile(window.game.scene,window.game.camera),console.log("Cleaning up dummy objects after warming..."),window.game.scene.remove(t);for(const n of o)t.remove(n);for(const n of r)window.objectPool.release("hitEffect",n);console.log("Precomputed assets and shaders warmed successfully"),console.log("Game started successfully")}catch(d){console.error("Error starting game:",d);const e=document.createElement("div");e.style.position="fixed",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.backgroundColor="rgba(0, 0, 0, 0.8)",e.style.color="#ff3030",e.style.padding="20px",e.style.borderRadius="10px",e.style.border="1px solid #ff3030",e.style.zIndex="9999",e.style.textAlign="center",e.style.fontFamily="Courier New, monospace",e.style.maxWidth="80%",e.innerHTML=`
            <h2>Error Starting Game</h2>
            <p>${d.message}</p>
            <p>Check the console for more details (F12).</p>
            <p>You can try refreshing the page or clearing your browser cache.</p>
            <button id="reload-button" style="background: #ff3030; color: white; border: none; padding: 10px; margin-top: 20px; cursor: pointer;">Reload Page</button>
        `,document.body.appendChild(e),document.getElementById("reload-button").addEventListener("click",()=>{const i=Date.now();window.location.href=window.location.pathname+"?cache="+i})}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",H):H();
//# sourceMappingURL=main-BMUGsG7j.js.map
