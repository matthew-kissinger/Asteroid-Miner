{"version":3,"mappings":"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","names":["document","ThreeImports.THREE","ThreeImports.OrbitControls","ThreeImports.GLTFLoader","ThreeImports.EffectComposer","ThreeImports.RenderPass","ThreeImports.UnrealBloomPass","ThreeImports.ShaderPass","ThreeImports.FXAAShader","ThreeImports.ColorCorrectionShader","ThreeImports.FilmShader","ThreeImports.VignetteShader","ThreeImports.WebGL"],"ignoreList":[0],"sources":["../../node_modules/three/examples/jsm/controls/OrbitControls.js","../../js/modules/pooling/PoolRegistry.js","../../src/main.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","// PoolRegistry.js - unified pool manager with stats and preallocation\r\n\r\nexport class PoolRegistry {\r\n  constructor() {\r\n    this.typeToPool = new Map();\r\n    this.statsData = { hits: 0, misses: 0 };\r\n  }\r\n\r\n  register(type, { factory, reset, preallocate = 0, maxSize = Infinity } = {}) {\r\n    if (!type) throw new Error('PoolRegistry.register requires a type');\r\n    if (this.typeToPool.has(type)) return this.typeToPool.get(type);\r\n    const pool = {\r\n      objects: [],\r\n      factory: factory || (() => ({})),\r\n      reset: reset || function noop() {},\r\n      maxSize,\r\n    };\r\n    for (let i = 0; i < preallocate; i++) {\r\n      try {\r\n        pool.objects.push(pool.factory());\r\n      } catch {}\r\n    }\r\n    this.statsData.misses += preallocate;\r\n    this.typeToPool.set(type, pool);\r\n    return pool;\r\n  }\r\n\r\n  get(type, ...args) {\r\n    const pool = this.typeToPool.get(type);\r\n    if (!pool) throw new Error(`PoolRegistry.get: unknown type '${type}'`);\r\n    let obj;\r\n    if (pool.objects.length > 0) {\r\n      obj = pool.objects.pop();\r\n      this.statsData.hits += 1;\r\n    } else {\r\n      obj = pool.factory();\r\n      this.statsData.misses += 1;\r\n    }\r\n    if (obj && typeof obj.reset === 'function') {\r\n      obj.reset(...args);\r\n    } else if (pool.reset) {\r\n      try { pool.reset(obj, ...args); } catch {}\r\n    }\r\n    this._flushPerf();\r\n    return obj;\r\n  }\r\n\r\n  release(type, obj) {\r\n    const pool = this.typeToPool.get(type);\r\n    if (!pool) return;\r\n    if (obj && typeof obj.clear === 'function') {\r\n      try { obj.clear(); } catch {}\r\n    } else if (pool.reset) {\r\n      try { pool.reset(obj); } catch {}\r\n    }\r\n    if (pool.objects.length < pool.maxSize) {\r\n      pool.objects.push(obj);\r\n    }\r\n  }\r\n\r\n  clear(type) {\r\n    const pool = this.typeToPool.get(type);\r\n    if (!pool) return;\r\n    pool.objects.length = 0;\r\n  }\r\n\r\n  clearAll() {\r\n    for (const [type] of this.typeToPool) this.clear(type);\r\n  }\r\n\r\n  stats() {\r\n    return { hits: this.statsData.hits, misses: this.statsData.misses };\r\n  }\r\n\r\n  _flushPerf() {\r\n    if (window.__perf) {\r\n      window.__perf.pools = { ...this.statsData };\r\n    }\r\n  }\r\n}\r\n\r\n// Create a global-friendly singleton when desired\r\nexport function getGlobalPoolRegistry() {\r\n  if (!window.poolRegistry) {\r\n    window.poolRegistry = new PoolRegistry();\r\n  }\r\n  return window.poolRegistry;\r\n}\r\n\r\n\r\n","// Import all Three.js modules from our centralized import file\r\nimport * as ThreeImports from './three-imports.js';\r\n\r\n// Make THREE extensible before adding properties\r\nObject.defineProperty(window, 'THREE', {\r\n  value: Object.assign({}, ThreeImports.THREE),\r\n  writable: true,\r\n  configurable: true\r\n});\r\n\r\n// Set up global THREE addon references that the original code expects\r\nwindow.THREE.OrbitControls = ThreeImports.OrbitControls;\r\nwindow.THREE.GLTFLoader = ThreeImports.GLTFLoader;\r\nwindow.THREE.EffectComposer = ThreeImports.EffectComposer;\r\nwindow.THREE.RenderPass = ThreeImports.RenderPass;\r\nwindow.THREE.UnrealBloomPass = ThreeImports.UnrealBloomPass;\r\nwindow.THREE.ShaderPass = ThreeImports.ShaderPass;\r\nwindow.THREE.FXAAShader = ThreeImports.FXAAShader;\r\nwindow.THREE.ColorCorrectionShader = ThreeImports.ColorCorrectionShader;\r\nwindow.THREE.FilmShader = ThreeImports.FilmShader;\r\nwindow.THREE.VignetteShader = ThreeImports.VignetteShader;\r\nwindow.THREE.WebGL = ThreeImports.WebGL;\r\n\r\n// Create a global compat layer for fixing module imports\r\nwindow.__vite_compat = {\r\n  resolveImport(path) {\r\n    // This will be used to help resolve imports in the original code\r\n    console.log(`Resolving import: ${path}`);\r\n    return path;\r\n  }\r\n};\r\n\r\nimport { getGlobalPoolRegistry } from '../js/modules/pooling/PoolRegistry.js';\r\n\r\n// Initialize the global object pool early via PoolRegistry facade\r\nwindow.objectPool = (() => {\r\n  const registry = getGlobalPoolRegistry();\r\n  return {\r\n    createPool: function(type, factory, initialSize = 10, maxSize = 100) {\r\n      registry.register(type, { factory, reset: (o)=>{}, preallocate: initialSize, maxSize });\r\n    },\r\n    get: function(type, ...args) {\r\n      try { return registry.get(type, ...args); } catch (e) { console.warn(e.message); return null; }\r\n    },\r\n    release: function(type, obj) { registry.release(type, obj); },\r\n    clearAllPools: function() { registry.clearAll(); },\r\n    clearPool: function(type) { registry.clear(type); }\r\n  };\r\n})();\r\n\r\n// ---------------- Asynchronous Asset Loading & Progress UI -----------------\r\n\r\n// Create and inject a basic loading overlay that will display progress to the user\r\nfunction createLoadingOverlay() {\r\n  const overlay = document.createElement('div');\r\n  overlay.id = 'loading-overlay';\r\n  overlay.style.position = 'fixed';\r\n  overlay.style.top = '0';\r\n  overlay.style.left = '0';\r\n  overlay.style.width = '100%';\r\n  overlay.style.height = '100%';\r\n  overlay.style.display = 'flex';\r\n  overlay.style.flexDirection = 'column';\r\n  overlay.style.justifyContent = 'center';\r\n  overlay.style.alignItems = 'center';\r\n  overlay.style.background = 'radial-gradient(circle at center, #101020 0%, #000000 80%)';\r\n  overlay.style.zIndex = '10000';\r\n\r\n  const text = document.createElement('div');\r\n  text.id = 'loading-text';\r\n  text.style.fontFamily = 'Courier New, monospace';\r\n  text.style.fontSize = '24px';\r\n  text.style.color = '#30cfd0';\r\n  text.style.marginBottom = '20px';\r\n  text.textContent = 'Loading 0%';\r\n  overlay.appendChild(text);\r\n\r\n  const barContainer = document.createElement('div');\r\n  barContainer.style.width = '60%';\r\n  barContainer.style.maxWidth = '400px';\r\n  barContainer.style.height = '10px';\r\n  barContainer.style.border = '1px solid #30cfd0';\r\n  barContainer.style.borderRadius = '5px';\r\n  barContainer.style.overflow = 'hidden';\r\n\r\n  const bar = document.createElement('div');\r\n  bar.id = 'loading-bar';\r\n  bar.style.width = '0%';\r\n  bar.style.height = '100%';\r\n  bar.style.background = '#30cfd0';\r\n  bar.style.transition = 'width 0.2s ease-out';\r\n\r\n  barContainer.appendChild(bar);\r\n  overlay.appendChild(barContainer);\r\n\r\n  return { overlay, text, bar };\r\n}\r\n\r\n// Wait until the DOM is ready before injecting the overlay and kicking off pre-loading\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const { overlay, text, bar } = createLoadingOverlay();\r\n  document.body.appendChild(overlay);\r\n\r\n  // Reference to the shared loading manager (DefaultLoadingManager is used by all loaders by default)\r\n  const loadingManager = window.THREE.DefaultLoadingManager;\r\n\r\n  // Track loading progress and update UI\r\n  loadingManager.onStart = function (url, itemsLoaded, itemsTotal) {\r\n    console.log(`Started loading: ${url} (${itemsLoaded}/${itemsTotal})`);\r\n  };\r\n\r\n  loadingManager.onProgress = function (url, itemsLoaded, itemsTotal) {\r\n    const percent = Math.round((itemsLoaded / itemsTotal) * 100);\r\n    text.textContent = `Loading ${percent}%`;\r\n    bar.style.width = `${percent}%`;\r\n  };\r\n\r\n  loadingManager.onError = function (url) {\r\n    console.warn(`There was an error loading ${url}`);\r\n  };\r\n\r\n  // Once everything is loaded we fade out the overlay and launch the game\r\n  loadingManager.onLoad = async function () {\r\n    console.log('All critical assets loaded. Initializing game…');\r\n    text.textContent = 'Initializing…';\r\n    bar.style.width = '100%';\r\n\r\n    // Small delay to let the user see 100%\r\n    setTimeout(async () => {\r\n      overlay.style.opacity = '0';\r\n      overlay.style.transition = 'opacity 0.5s ease-out';\r\n      setTimeout(() => overlay.remove(), 600);\r\n\r\n      // Dynamically import the main game module now that assets are ready\r\n      try {\r\n        await import('js/main.js');\r\n        console.timeEnd('init');\r\n      } catch (err) {\r\n        console.error('Failed to load main game module:', err);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  // ---------------- Pre-load essential assets -----------------\r\n\r\n  // NOTE: These are assets required for the first visible scene (ship trail, sun lens flares, skybox, etc.)\r\n  const essentialTextures = [\r\n    './assets/2k_stars_milky_way.jpg',\r\n    'https://threejs.org/examples/textures/sprites/spark1.png',\r\n    'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r128/examples/textures/lensflare/lensflare0.png',\r\n    'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r128/examples/textures/lensflare/lensflare2.png',\r\n    'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r128/examples/textures/lensflare/lensflare3.png'\r\n  ];\r\n\r\n  const textureLoader = new window.THREE.TextureLoader(loadingManager);\r\n  essentialTextures.forEach((tex) => textureLoader.load(tex, () => {}));\r\n\r\n  // Pre-load enemy model (not strictly visible at start but avoids hitch later)\r\n  const gltfLoader = new window.THREE.GLTFLoader(loadingManager);\r\n  gltfLoader.load('assets/enemy.glb', () => {\r\n    console.log('Pre-loaded enemy.glb');\r\n  });\r\n});\r\n\r\n// ---------------------------------------------------------------------------\r\n"],"file":"assets/index-BAJ48QH_.js"}