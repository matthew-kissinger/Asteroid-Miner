{"version":3,"file":"OptimizedProjectileStore-83fvI2Yz.js","sources":["../../js/core/optimized/OptimizedProjectileStore.js"],"sourcesContent":["// OptimizedProjectileStore.js - TypedArray-backed projectile data\r\n\r\nexport class OptimizedProjectileStore {\r\n  constructor(capacity = 2048) {\r\n    this.capacity = capacity;\r\n    this.count = 0;\r\n    this.pos = new Float32Array(capacity * 3);\r\n    this.vel = new Float32Array(capacity * 3);\r\n    this.alive = new Uint8Array(capacity);\r\n    this.idToIndex = new Map();\r\n    this.indexToProjectile = new Array(capacity);\r\n  }\r\n\r\n  _allocIndex() {\r\n    if (this.count >= this.capacity) return -1;\r\n    const idx = this.count++;\r\n    return idx;\r\n  }\r\n\r\n  register(projectile) {\r\n    const idx = this._allocIndex();\r\n    if (idx === -1) return -1;\r\n    this.idToIndex.set(projectile.uuid || projectile.id || idx, idx);\r\n    this.indexToProjectile[idx] = projectile;\r\n    this.alive[idx] = 1;\r\n    // initialize from projectile\r\n    const p = projectile.position;\r\n    this.pos[idx * 3 + 0] = p.x;\r\n    this.pos[idx * 3 + 1] = p.y;\r\n    this.pos[idx * 3 + 2] = p.z;\r\n    const v = projectile.velocity || { x: 0, y: 0, z: 0 };\r\n    this.vel[idx * 3 + 0] = v.x;\r\n    this.vel[idx * 3 + 1] = v.y;\r\n    this.vel[idx * 3 + 2] = v.z;\r\n    return idx;\r\n  }\r\n\r\n  unregisterByIndex(idx) {\r\n    if (idx < 0 || idx >= this.count) return;\r\n    this.alive[idx] = 0;\r\n    this.indexToProjectile[idx] = null;\r\n  }\r\n\r\n  unregister(projectile) {\r\n    const id = projectile.uuid || projectile.id;\r\n    if (id == null) return;\r\n    const idx = this.idToIndex.get(id);\r\n    if (idx == null) return;\r\n    this.alive[idx] = 0;\r\n    this.indexToProjectile[idx] = null;\r\n    this.idToIndex.delete(id);\r\n  }\r\n\r\n  update(dt) {\r\n    const n = this.count;\r\n    for (let i = 0; i < n; i++) {\r\n      if (!this.alive[i]) continue;\r\n      const pi = i * 3;\r\n      this.pos[pi + 0] += this.vel[pi + 0] * dt;\r\n      this.pos[pi + 1] += this.vel[pi + 1] * dt;\r\n      this.pos[pi + 2] += this.vel[pi + 2] * dt;\r\n      const proj = this.indexToProjectile[i];\r\n      if (proj && proj.position) {\r\n        proj.position.set(this.pos[pi + 0], this.pos[pi + 1], this.pos[pi + 2]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"],"names":["OptimizedProjectileStore","capacity","projectile","idx","p","v","id","dt","n","i","pi","proj"],"mappings":"AAEO,MAAMA,CAAyB,CACpC,YAAYC,EAAW,KAAM,CAC3B,KAAK,SAAWA,EAChB,KAAK,MAAQ,EACb,KAAK,IAAM,IAAI,aAAaA,EAAW,CAAC,EACxC,KAAK,IAAM,IAAI,aAAaA,EAAW,CAAC,EACxC,KAAK,MAAQ,IAAI,WAAWA,CAAQ,EACpC,KAAK,UAAY,IAAI,IACrB,KAAK,kBAAoB,IAAI,MAAMA,CAAQ,CAC5C,CAED,aAAc,CACZ,OAAI,KAAK,OAAS,KAAK,SAAiB,GAC5B,KAAK,OAElB,CAED,SAASC,EAAY,CACnB,MAAMC,EAAM,KAAK,cACjB,GAAIA,IAAQ,GAAI,MAAO,GACvB,KAAK,UAAU,IAAID,EAAW,MAAQA,EAAW,IAAMC,EAAKA,CAAG,EAC/D,KAAK,kBAAkBA,CAAG,EAAID,EAC9B,KAAK,MAAMC,CAAG,EAAI,EAElB,MAAMC,EAAIF,EAAW,SACrB,KAAK,IAAIC,EAAM,EAAI,CAAC,EAAIC,EAAE,EAC1B,KAAK,IAAID,EAAM,EAAI,CAAC,EAAIC,EAAE,EAC1B,KAAK,IAAID,EAAM,EAAI,CAAC,EAAIC,EAAE,EAC1B,MAAMC,EAAIH,EAAW,UAAY,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,YAAK,IAAIC,EAAM,EAAI,CAAC,EAAIE,EAAE,EAC1B,KAAK,IAAIF,EAAM,EAAI,CAAC,EAAIE,EAAE,EAC1B,KAAK,IAAIF,EAAM,EAAI,CAAC,EAAIE,EAAE,EACnBF,CACR,CAED,kBAAkBA,EAAK,CACjBA,EAAM,GAAKA,GAAO,KAAK,QAC3B,KAAK,MAAMA,CAAG,EAAI,EAClB,KAAK,kBAAkBA,CAAG,EAAI,KAC/B,CAED,WAAWD,EAAY,CACrB,MAAMI,EAAKJ,EAAW,MAAQA,EAAW,GACzC,GAAII,GAAM,KAAM,OAChB,MAAMH,EAAM,KAAK,UAAU,IAAIG,CAAE,EAC7BH,GAAO,OACX,KAAK,MAAMA,CAAG,EAAI,EAClB,KAAK,kBAAkBA,CAAG,EAAI,KAC9B,KAAK,UAAU,OAAOG,CAAE,EACzB,CAED,OAAOC,EAAI,CACT,MAAMC,EAAI,KAAK,MACf,QAASC,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAC1B,GAAI,CAAC,KAAK,MAAMA,CAAC,EAAG,SACpB,MAAMC,EAAKD,EAAI,EACf,KAAK,IAAIC,EAAK,CAAC,GAAK,KAAK,IAAIA,EAAK,CAAC,EAAIH,EACvC,KAAK,IAAIG,EAAK,CAAC,GAAK,KAAK,IAAIA,EAAK,CAAC,EAAIH,EACvC,KAAK,IAAIG,EAAK,CAAC,GAAK,KAAK,IAAIA,EAAK,CAAC,EAAIH,EACvC,MAAMI,EAAO,KAAK,kBAAkBF,CAAC,EACjCE,GAAQA,EAAK,UACfA,EAAK,SAAS,IAAI,KAAK,IAAID,EAAK,CAAC,EAAG,KAAK,IAAIA,EAAK,CAAC,EAAG,KAAK,IAAIA,EAAK,CAAC,CAAC,CAEzE,CACF,CACH"}