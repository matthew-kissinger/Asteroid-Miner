{"version":3,"file":"OptimizedProjectileStore-By7FFnfF.js","sources":["../../js/core/optimized/OptimizedProjectileStore.js"],"sourcesContent":["// OptimizedProjectileStore.js - TypedArray-backed projectile data\r\n\r\nexport class OptimizedProjectileStore {\r\n  constructor(capacity = 2048) {\r\n    this.capacity = capacity;\r\n    this.count = 0;\r\n    this.pos = new Float32Array(capacity * 3);\r\n    this.vel = new Float32Array(capacity * 3);\r\n    this.alive = new Uint8Array(capacity);\r\n    this.idToIndex = new Map();\r\n    this.indexToProjectile = new Array(capacity);\r\n  }\r\n\r\n  _allocIndex() {\r\n    if (this.count >= this.capacity) return -1;\r\n    const idx = this.count++;\r\n    return idx;\r\n  }\r\n\r\n  register(projectile) {\r\n    const idx = this._allocIndex();\r\n    if (idx === -1) return -1;\r\n    this.idToIndex.set(projectile.uuid || projectile.id || idx, idx);\r\n    this.indexToProjectile[idx] = projectile;\r\n    this.alive[idx] = 1;\r\n    // initialize from projectile\r\n    const p = projectile.position;\r\n    this.pos[idx * 3 + 0] = p.x;\r\n    this.pos[idx * 3 + 1] = p.y;\r\n    this.pos[idx * 3 + 2] = p.z;\r\n    const v = projectile.velocity || { x: 0, y: 0, z: 0 };\r\n    this.vel[idx * 3 + 0] = v.x;\r\n    this.vel[idx * 3 + 1] = v.y;\r\n    this.vel[idx * 3 + 2] = v.z;\r\n    return idx;\r\n  }\r\n\r\n  unregisterByIndex(idx) {\r\n    if (idx < 0 || idx >= this.count) return;\r\n    this.alive[idx] = 0;\r\n    this.indexToProjectile[idx] = null;\r\n  }\r\n\r\n  unregister(projectile) {\r\n    const id = projectile.uuid || projectile.id;\r\n    if (id == null) return;\r\n    const idx = this.idToIndex.get(id);\r\n    if (idx == null) return;\r\n    this.alive[idx] = 0;\r\n    this.indexToProjectile[idx] = null;\r\n    this.idToIndex.delete(id);\r\n  }\r\n\r\n  update(dt) {\r\n    const n = this.count;\r\n    for (let i = 0; i < n; i++) {\r\n      if (!this.alive[i]) continue;\r\n      const pi = i * 3;\r\n      this.pos[pi + 0] += this.vel[pi + 0] * dt;\r\n      this.pos[pi + 1] += this.vel[pi + 1] * dt;\r\n      this.pos[pi + 2] += this.vel[pi + 2] * dt;\r\n      const proj = this.indexToProjectile[i];\r\n      if (proj && proj.position) {\r\n        proj.position.set(this.pos[pi + 0], this.pos[pi + 1], this.pos[pi + 2]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"AAEO,MAAM,yBAAyB;AAAA,EACpC,YAAY,WAAW,MAAM;AAC3B,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,MAAM,IAAI,aAAa,WAAW,CAAC;AACxC,SAAK,MAAM,IAAI,aAAa,WAAW,CAAC;AACxC,SAAK,QAAQ,IAAI,WAAW,QAAQ;AACpC,SAAK,YAAY,oBAAI;AACrB,SAAK,oBAAoB,IAAI,MAAM,QAAQ;AAAA,EAC5C;AAAA,EAED,cAAc;AACZ,QAAI,KAAK,SAAS,KAAK,SAAU,QAAO;AACxC,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACR;AAAA,EAED,SAAS,YAAY;AACnB,UAAM,MAAM,KAAK;AACjB,QAAI,QAAQ,GAAI,QAAO;AACvB,SAAK,UAAU,IAAI,WAAW,QAAQ,WAAW,MAAM,KAAK,GAAG;AAC/D,SAAK,kBAAkB,GAAG,IAAI;AAC9B,SAAK,MAAM,GAAG,IAAI;AAElB,UAAM,IAAI,WAAW;AACrB,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,UAAM,IAAI,WAAW,YAAY,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG;AAClD,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,SAAK,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAC1B,WAAO;AAAA,EACR;AAAA,EAED,kBAAkB,KAAK;AACrB,QAAI,MAAM,KAAK,OAAO,KAAK,MAAO;AAClC,SAAK,MAAM,GAAG,IAAI;AAClB,SAAK,kBAAkB,GAAG,IAAI;AAAA,EAC/B;AAAA,EAED,WAAW,YAAY;AACrB,UAAM,KAAK,WAAW,QAAQ,WAAW;AACzC,QAAI,MAAM,KAAM;AAChB,UAAM,MAAM,KAAK,UAAU,IAAI,EAAE;AACjC,QAAI,OAAO,KAAM;AACjB,SAAK,MAAM,GAAG,IAAI;AAClB,SAAK,kBAAkB,GAAG,IAAI;AAC9B,SAAK,UAAU,OAAO,EAAE;AAAA,EACzB;AAAA,EAED,OAAO,IAAI;AACT,UAAM,IAAI,KAAK;AACf,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,CAAC,KAAK,MAAM,CAAC,EAAG;AACpB,YAAM,KAAK,IAAI;AACf,WAAK,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI;AACvC,WAAK,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI;AACvC,WAAK,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI;AACvC,YAAM,OAAO,KAAK,kBAAkB,CAAC;AACrC,UAAI,QAAQ,KAAK,UAAU;AACzB,aAAK,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,KAAK,CAAC,CAAC;AAAA,MACvE;AAAA,IACF;AAAA,EACF;AACH;"}